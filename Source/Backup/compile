x=0
while test x -eq 0; do 

	=1

	read compilecommand

	one=

	two=

	shift 2

	rest=

	if test  = -o; then

		if test -z ; then

x=0
while test x -eq 0; do 

	=1

	read compilecommand

	one=

	two=

	shift 2

	rest=

	if test  = -o; then

		if test -z ; then

x=0
while test x -eq 0; do 

	=1

	read compilecommand

	one=

	two=

	shift 2

	rest=

	if test  = -o; then

		if test -z ; then

x=0
while test x -eq 0; do 

	=1

	read compilecommand

	one=

	two=

	shift 2

	rest=

	if test  = -o; then

		if test -z ; then

x=0
while test x -eq 0; do 

	=1

	read compilecommand

	one=

	two=

	shift 2

	rest=

	if test  = -o; then

		if test -z ; then

x=0
while [ x -eq 0]; do 

	=1

	read compilecommand

	one=

	two=

	shift 2

	rest=

	if [  = -o ]; then

		if [ -z ]; then

x=0
while [ x -eq 0]; do 

	x=1

	one=

	two=

	shift 2

	rest=

	if [  = -o ]; then

		if [ -z ]; then

x=0
while [ x -eq 0]; do 

	x=1

	one=

	two=

	shift 2

	rest=

	if [  = -o ]; then

		if [ -z ]; then

x=0
while [ x -eq 0]; do 

	x=1

	one=

	two=

	shift 2

	rest=

	if [  = -o ]; then

		if [ -z ]; then

x=0
while [ x -eq 0]; do 

	x=1

	one=

	two=

	shift 2

	rest=

	if [  = -o ]; then

		if [ -z ]; then

x=0
while [ x -eq 0]; do 

	x=1

	one=

	two=

	shift 2

	rest=

	if [  = -o ]; then

		if [ -z ]; then

